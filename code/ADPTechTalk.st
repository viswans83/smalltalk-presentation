'From Squeak5.1 of 5 September 2016 [latest update: #16549] on 17 July 2018 at 10:23:09 pm'!CustomHelp subclass: #ADPTechTalk	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'My-Stuff'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ADPTechTalk class	instanceVariableNames: ''!!ADPTechTalk class methodsFor: 'accessing' stamp: 'SV 7/17/2018 01:35'!bookName	^ 'ADP Tech Talk'! !!ADPTechTalk class methodsFor: 'accessing' stamp: 'SV 7/17/2018 20:56'!pages	^ #(one two three four five six seven eight nine)	! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 21:30'!eight	"This method was automatically generated. Edit it using:"	"ADPTechTalk edit: #eight"	^(HelpTopic		title: 'Tools are Objects'		contents: '"inspect an object"#(1 2 3 4 5) inspect."open a browser"Browser open."browse a specific class"''abcde'' class browse."open the help browser on this tutorial talk"HelpBrowser openForCodeOn: ADPTechTalk."open the browser on a specific method in a specific class"Browser fullOnClass: Integer selector: #factorial."now inspect model then run:" self setSelector: #log.    "Debug the below code snippet:  | x y z |  x := 10.  y := 25.  z := x * y.now control the debugger:"self doStep.!!' readStream nextChunkText)			key: #eight! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 02:05'!examples	"This method was automatically generated. Edit it using:"	"ADPTechTalk edit: #examples"	^(HelpTopic		title: 'Demo Agenda'		contents: '"== Demo Outline == 1. Environment2. Unary messages	2 squared.	6 factorial.	''abcde'' size.	''abcde'' reversed.	true not.3. Binary messages	10 + 20.	100 @ 100.	''abc'', ''def''	10 * 2 + 5-- numbers are objects --4. Keyword messages	2 raisedTo: 3	1 to: 100	text findString:startingAt:	0@0 extent: 100@1004a. message precedence	2 + 3 raisedTo: 2	2 + 3 squared raisedTo: 25. Blocks (introduce assignment)	[ Transcript show: ''Hello World!!!!'' ]	Display numbers 1 to 100	(1 to: 100) do: [ xxx ]	#(1 2 3 4 5) collect: [ xxx ]6. Conditionals (use #perform:withArguments:)	#ifTrue:ifFalse:	#ifNil (nil is an object)6a. Loops 7. Classes	Create a Person class	Create a method #palindromeName (use message finder)	Create an Employee class by sending a message	use: self super #new7a. Classes are open to modification	Number>>#** (in place of #raisedTo: )	Integer>>#digitCount	Number>>#cubed	Integer>>#ifEven:	Collection>>#sumOfSquares8. Reflection	#addInstVarName:	#compile:classified:	#sourceCodeAt:	#commentsAt:	#class	#superclass	#allSuperclasses	#subclasses	#allInstances (print out a random string every second)9. Class side vs Object side (metaclasses)9. Tools as objects	123 inspect	''abcde'' class browse9a. Add helper methods for tools	#size browseOn: Collection.	#factorial browseOn: Integer."!!' readStream nextChunkText)			key: #examples! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 21:05'!five	"This method was automatically generated. Edit it using:"	"ADPTechTalk edit: #five"	^(HelpTopic		title: 'Classes II'		contents: '"All classes are open to modification.Tasks====1.	Add a method named #digitCount that counts the 	number of digits in a number (e.g. 9999 has 5 digits)2. 	Add a method named #sumOfSquares  3. 	Add a method named #perfectSquaresDo: that 	feeds a supplied block every perfect square in a 	collection of numbers"!!' readStream nextChunkText)			key: #five! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 21:28'!four	"This method was automatically generated. Edit it using:"	"ADPTechTalk edit: #four"	^(HelpTopic		title: 'Classes'		contents: '"Create a ''Person'' class with an instance variable ''name''.  Add accessor methods for name  Add a method: introduceYourself.    Add a method: isYourNamePalindrome.  Add a constructor newNamed: Create an Employee class that subclasses Person by sending a message."Employee newNamed: ''Sankar''.!!' readStream nextChunkText)			key: #four! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 01:36'!liveness	"This method was automatically generated. Edit it using:"	"TechTalkCodeSamples edit: #liveness"	^(HelpTopic		title: 'Liveness'		contents: '| aProcess rect morph |"Open Help Browser"HelpBrowser openForCodeOn: ADPTechTalk."Click Button"self doButtonAction."Change Browser Title"self label: ''Hello World!!!!''."Change Window Color"self setWindowColor: Color red."Change selected method"self selectedMessageName: #abs."Work scrollbar"self scrollDown: 1.self scrollUp: 10."Rotate a transformation morph"aProcess := [	self heading: self heading + 1.	100 milliSeconds asDelay wait.	thisContext restart.] forkNamed: ''Rotating Window''."Add a button to toggle rotation"(SimpleButtonMorph newWithLabel: ''Toggle Rotation'')	target: [ 			aProcess isSuspended 				ifTrue: [ aProcess resume ] 				ifFalse: [ aProcess suspend ]		];	actionSelector: #value;	openInHand."Control the debugger"self doStep."Spin a rectangle selection"rect := Rectangle fromUser.morph := (Form fromDisplay: rect) asMorph.morph position: rect origin.morph openInWorld.[ 	morph heading: (morph heading + 1).	100 milliSeconds asDelay wait.	thisContext restart.] forkNamed: ''Spinning Rectangle''.!!' readStream nextChunkText)			key: #liveness! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 21:20'!nine	"This method was automatically generated. Edit it using:"	"ADPTechTalk edit: #nine"	^(HelpTopic		title: 'Morphic'		contents: '| rect morph |"Activate a button"self doButtonAction."Change Browser Window Color"self setWindowColor: Color red."Spin a rectangular area of the screen""| rect morph |"rect := Rectangle fromUser.morph := (Form fromDisplay: rect) asMorph.morph position: rect origin.morph openInWorld.[   morph heading: (morph heading + 1).  20 milliSeconds asDelay wait.  morph heading < 360 ifTrue: [ thisContext restart ].  morph heading: 0.] forkNamed: ''Spinning Screen Area''.!!' readStream nextChunkText)			key: #nine! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 20:36'!nineteen	"This method was automatically generated. Edit it using:"	"ADPTechTalk edit: #examples"	^(HelpTopic		title: 'Demo Agenda'		contents: '"== Demo Outline == 1. Environment2. Unary messages	2 squared.	6 factorial.	''abcde'' size.	''abcde'' reversed.	true not.3. Binary messages	10 + 20.	100 @ 100.	''abc'', ''def''	10 * 2 + 5-- numbers are objects --4. Keyword messages	2 raisedTo: 3	1 to: 100	text findString:startingAt:	0@0 extent: 100@1004a. message precedence	2 + 3 raisedTo: 2	2 + 3 squared raisedTo: 25. Blocks (introduce assignment)	[ Transcript show: ''Hello World!!!!'' ]	Display numbers 1 to 100	(1 to: 100) do: [ xxx ]	#(1 2 3 4 5) collect: [ xxx ]6. Conditionals (use #perform:withArguments:)	#ifTrue:ifFalse:	#ifNil (nil is an object)6a. Loops 7. Classes	Create a Person class	Create a method #palindromeName (use message finder)	Create an Employee class by sending a message	use: self super #new7a. Classes are open to modification	Number>>#** (in place of #raisedTo: )	Integer>>#digitCount	Number>>#cubed	Integer>>#ifEven:	Collection>>#sumOfSquares8. Reflection	#addInstVarName:	#compile:classified:	#sourceCodeAt:	#commentsAt:	#class	#superclass	#allSuperclasses	#subclasses	#allInstances (print out a random string every second)9. Class side vs Object side (metaclasses)9. Tools as objects	123 inspect	''abcde'' class browse9a. Add helper methods for tools	#size browseOn: Collection.	#factorial browseOn: Integer."!!' readStream nextChunkText)			key: #nineteen! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 21:26'!one	"This method was automatically generated. Edit it using:"	"ADPTechTalk edit: #one"	^(HelpTopic		title: 'Messages'		contents: '"Unary messages"2 squared.100 factorial.''abcde'' size.true not.nil isNil."Binary messages"10 + 20.100 @ 100.''abc'', ''def''."Keyword messages"2 raisedTo: 3.1 to: 100.#(12 24 36) at: 1.Transcript showln: ''Hello World!!!!''.''sankaranarayanan'' findString: ''an'' startingAt: 5."Message Cascade"OrderedCollection new	add: 100;	add: 200;	add: 300;	yourself.!!' readStream nextChunkText)			key: #one! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 21:15'!seven	"This method was automatically generated. Edit it using:"	"ADPTechTalk edit: #seven"	^(HelpTopic		title: 'Intercession'		contents: '"add an instance variable"Person addInstVarName: ''age''."compile accessor methods for age"Person   compile: ''age    ^ age''   classified: ''accessing''.Person   compile: ''age: aNumber    age := aNumber''   classified: ''accessing''.!!' readStream nextChunkText)			key: #seven! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 21:21'!six	"This method was automatically generated. Edit it using:"	"ADPTechTalk edit: #six"	^(HelpTopic		title: 'Introspection'		contents: '123 class.123 class allSuperclasses.Number allSubclasses.Boolean allSubInstances.String selectors.String firstCommentAt: #beginsWith:.String sourceCodeAt: #beginsWith:.!!' readStream nextChunkText)			key: #six! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 21:25'!three	"This method was automatically generated. Edit it using:"	"ADPTechTalk edit: #three"	^(HelpTopic		title: 'Flow Control'		contents: '|x|"if / else"123 even   ifTrue: [ ''Number is even'' ]   ifFalse: [ ''Number is odd'' ]."while loop""| x |"x := 1.[ x <= 10 ] whileTrue: [   Transcript showln: x squared asString.  x := x + 1.]."conditions on nil"nil ifNil: [ ''I am nil'' ].123 ifNotNil: [ ''I am not nil'' ]."exception handling"[ 100 / 0 ]  on: ZeroDivide  do: [ Transcript showln: ''A divide by zero occurred'' ]!!' readStream nextChunkText)			key: #three! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 20:37'!twenty	"This method was automatically generated. Edit it using:"	"TechTalkCodeSamples edit: #liveness"	^(HelpTopic		title: 'Liveness'		contents: '| aProcess rect morph |"Open Help Browser"HelpBrowser openForCodeOn: ADPTechTalk."Click Button"self doButtonAction."Change Browser Title"self label: ''Hello World!!!!''."Change Window Color"self setWindowColor: Color red."Change selected method"self selectedMessageName: #abs."Work scrollbar"self scrollDown: 1.self scrollUp: 10."Rotate a transformation morph"aProcess := [	self heading: self heading + 1.	100 milliSeconds asDelay wait.	thisContext restart.] forkNamed: ''Rotating Window''."Add a button to toggle rotation"(SimpleButtonMorph newWithLabel: ''Toggle Rotation'')	target: [ 			aProcess isSuspended 				ifTrue: [ aProcess resume ] 				ifFalse: [ aProcess suspend ]		];	actionSelector: #value;	openInHand."Control the debugger"self doStep."Spin a rectangle selection"rect := Rectangle fromUser.morph := (Form fromDisplay: rect) asMorph.morph position: rect origin.morph openInWorld.[ 	morph heading: (morph heading + 1).	100 milliSeconds asDelay wait.	thisContext restart.] forkNamed: ''Spinning Rectangle''.!!' readStream nextChunkText)			key: #twenty! !!ADPTechTalk class methodsFor: 'pages' stamp: 'SV 7/17/2018 21:27'!two	"This method was automatically generated. Edit it using:"	"ADPTechTalk edit: #two"	^(HelpTopic		title: 'Blocks'		contents: '"zero argument block"[ Transcript show: ''Hello World!!!!'' ]."two argument block"[ :x :y | (x + y) / 2 ] value: 10 value: 20."block example"(1 to: 100) collect: [ :n | n squared ].!!' readStream nextChunkText)			key: #two! !